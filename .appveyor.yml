image: macos-monterey

skip_branch_with_pr: true

environment:
  PYTHON_VERSION: 3.12
  FLUTTER_MACOS_URL: https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_3.13.7-stable.zip
  GITHUB_TOKEN:
    secure: doX0dwjWhBmT56aJqR9NCbtMFJpDpdYxPCIB4vQoHfSR+nTa+pLCo6Yv5qWpD/90

  matrix:
    # - job_name: Build Python for Android - arm64-v8a
    #   job_group: build_python_android
    #   ANDROID_ABI: arm64-v8a

    # - job_name: Build Python for Android - armeabi-v7a
    #   job_group: build_python_android
    #   ANDROID_ABI: armeabi-v7a

    # - job_name: Build Python for Android - x86_64
    #   job_group: build_python_android
    #   ANDROID_ABI: x86_64

    - job_name: Build Python for iOS
      job_group: build_python_darwin
      APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma

    # - job_name: Test on macOS
    #   job_group: test_serious_python
    #   job_depends_on: build_python_darwin
    #   APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey

    # - job_name: Test on iOS
    #   job_group: test_serious_python
    #   job_depends_on: build_python_darwin
    #   APPVEYOR_BUILD_WORKER_IMAGE: macos-monterey

    # - job_name: Test on Android
    #   job_group: test_serious_python
    #   job_depends_on: build_python_android
    #   APPVEYOR_BUILD_WORKER_IMAGE: ubuntu-gce-c

    # - job_name: Test on Windows
    #   job_group: test_serious_python
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022

    # - job_name: Test on Linux
    #   job_group: test_serious_python
    #   APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004

    # - job_name: Test on Linux ARM64
    #   job_group: test_serious_python
    #   APPVEYOR_BUILD_WORKER_IMAGE: ubuntu2004-arm

    # - job_name: Publish serious_python package to pub.dev
    #   job_group: publish_package
    #   job_depends_on: build_python, test_serious_python
    #   APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004

stack:
- python $PYTHON_VERSION

for:
  # ======================================
  #      Build Python for Android
  # ======================================

  - matrix:
      only:
        - job_group: build_python_android

    environment:
      APPVEYOR_BUILD_WORKER_IMAGE: ubuntu-gce-c
      NDK_VERSION: r26d

    install:
      # update build version
      - ps: |
          if ($env:APPVEYOR_REPO_TAG_NAME) {
            $v = $env:APPVEYOR_REPO_TAG_NAME.replace("v", "")
          } else {
            $cv = [version](git describe --abbrev=0).substring(1)
            $v = "$($cv.major).$($cv.minor+1).0+$($env:APPVEYOR_BUILD_NUMBER)"
          }
          Update-AppveyorBuild -Version $v

    build_script:
      # use python-mobile repo to build Python for Android
      - git clone -q --branch=main https://github.com/flet-dev/python-mobile.git
      - ./python-mobile/build.sh $PYTHON_VERSION $ANDROID_ABI
      - ./ci/package-python-for-android.sh python-mobile/install $PYTHON_VERSION $ANDROID_ABI
      - find dist -type f -iname *.tar.gz -exec appveyor PushArtifact -DeploymentName python-dist-android {} \;

    test: off

    deploy:
      provider: GitHub
      auth_token: $(GITHUB_TOKEN)
      release: $(APPVEYOR_REPO_TAG_NAME)
      artifact: python-dist-android
      on:
        APPVEYOR_REPO_TAG: true

  # ======================================
  #      Build Python for iOS
  # ======================================

  - matrix:
      only:
        - job_name: Build Python for iOS

    install:
      # update build version
      - ps: |
          if ($env:APPVEYOR_REPO_TAG_NAME) {
            $v = $env:APPVEYOR_REPO_TAG_NAME.replace("v", "")
          } else {
            $cv = [version](git describe --abbrev=0).substring(1)
            $v = "$($cv.major).$($cv.minor+1).0+$($env:APPVEYOR_BUILD_NUMBER)"
          }
          Update-AppveyorBuild -Version $v

    build_script:
      # use python-mobile repo to build Python for Android
      - git clone -q --branch=3.12.3 https://github.com/flet-dev/Python-Apple-support
      - sh: |
          pushd Python-Apple-support
          make iOS
          popd
      - ls
      - ./ci/package-python-for-ios.sh Python-Apple-support $PYTHON_VERSION
      - find dist -type f -iname *.tar.gz -exec appveyor PushArtifact -DeploymentName python-dist-macos {} \;

    deploy:
      provider: GitHub
      auth_token: $(GITHUB_TOKEN)
      release: $(APPVEYOR_REPO_TAG_NAME)
      artifact: python-dist-macos
      on:
        APPVEYOR_REPO_TAG: true

    test: off

  # ======================================
  #      Test on macOS
  # ======================================

  - matrix:
      only:
        - job_name: Test on macOS

    install:
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - flutter doctor

      # download dist for non-releases
      - |
          if [[ "$APPVEYOR_REPO_TAG_NAME" == "" ]]; then
            python3 ci/download_artifact.py "Build Python for iOS" "python-ios-dist-v{version}.tar.gz"
            export SERIOUS_PYTHON_IOS_DIST=$APPVEYOR_BUILD_FOLDER/python_dist/dist
          fi

    build: off

    test_script:
      - cd src/serious_python/example/flet_example
      - dart run serious_python:main package app/src --dep-mappings "flet=flet-embed" --req-deps "flet-embed"
      - flutter test integration_test -d macos

  # ======================================
  #      Test on iOS
  # ======================================

  - matrix:
      only:
        - job_name: Test on iOS

    install:
      - HOMEBREW_NO_AUTO_UPDATE=1 brew install cocoapods
      - curl $FLUTTER_MACOS_URL -o "$HOME/flutter_macos_stable.zip"
      - unzip -qq "$HOME/flutter_macos_stable.zip" -d $HOME
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter channel stable
      - flutter upgrade
      - flutter config --enable-macos-desktop
      - xcrun simctl list runtimes
      - xcrun simctl create "e2e test" "iPhone 12" "com.apple.CoreSimulator.SimRuntime.iOS-16-1"
      - xcrun xctrace list devices
      - |
          UDID=$(xcrun xctrace list devices | grep "^e2e test Simulator (16.1)" | awk '{gsub(/[()]/,""); print $NF}')      
          echo $UDID
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      #- flutter doctor -v

      # download dist for non-releases
      - |
          if [[ "$APPVEYOR_REPO_TAG_NAME" == "" ]]; then
            python3 ci/download_artifact.py "Build Python for iOS" "python-ios-dist-v{version}.tar.gz"
            export SERIOUS_PYTHON_IOS_DIST=$APPVEYOR_BUILD_FOLDER/python_dist/dist
          fi

    build: off

    test_script:
      - cd src/serious_python/example/flet_example
      - dart run serious_python:main package app/src --mobile --dep-mappings "flet=flet-embed" --req-deps "flet-embed"
      - flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart

  # ======================================
  #      Test on Android
  # ======================================

  - matrix:
      only:
        - job_name: Test on Android

    install:
      - API_LEVEL="33"
      - TARGET="google_atd"
      - ARCH="x86_64"
      - DEVICE_NAME="android_emulator"
      - DEVICE_TYPE="pixel_5"
      - 'export PATH=$ANDROID_SDK_ROOT/platform-tools:$ANDROID_SDK_ROOT/emulator:$PATH'
      - sdkmanager "platform-tools" "platforms;android-${API_LEVEL}"
      - sdkmanager --install "system-images;android-${API_LEVEL};${TARGET};${ARCH}"
      - sdkmanager --update
      - echo "y" | sdkmanager --licenses
      - echo "no" | avdmanager -v create avd --force --name "${DEVICE_NAME}" --package "system-images;android-${API_LEVEL};${TARGET};${ARCH}" --tag "${TARGET}" --sdcard 128M --device "${DEVICE_TYPE}"
      - ls -al ~/.android/avd
      - sudo adduser $USER kvm
      - sudo chown $USER /dev/kvm
      - emulator -avd "${DEVICE_NAME}" -memory 2048 -wipe-data -no-boot-anim -cache-size 1000 -noaudio -no-window -partition-size 8192 &
      - adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - flutter upgrade --force
      - flutter doctor -v

      # download dist for non-releases
      - |
          if [[ "$APPVEYOR_REPO_TAG_NAME" == "" ]]; then
            python3 ci/download_artifact.py "Build Python for Android" "python-android-dist-v{version}.tar.gz"
            export SERIOUS_PYTHON_BUILD_DIST=$APPVEYOR_BUILD_FOLDER/python_dist
          fi

    build: off

    test_script:
      - cd src/serious_python/example/flet_example
      - dart run serious_python:main package app/src --mobile --dep-mappings "flet=flet-embed" --req-deps "flet-embed"
      - flutter test integration_test -d emulator-5554


  # ======================================
  #      Test on Windows
  # ======================================

  - matrix:
      only:
        - job_name: Test on Windows

    #environment:
    #  VC_REDIST_DIR: 'C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Redist\MSVC\14.29.30133\x64\Microsoft.VC142.CRT'

    install:
      - flutter upgrade --force

    build: off

    test_script:
      - cd src/serious_python/example/flet_example
      - dart run serious_python:main package app/src --dep-mappings "flet=flet-embed" --req-deps "flet-embed"
      - flutter test integration_test -d windows

  # ======================================
  #      Test on Linux
  # ======================================

  - matrix:
      only:
        - job_name: Test on Linux

    install:
      - sudo apt update --allow-releaseinfo-change
      - sudo apt install -y xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      - flutter upgrade --force

    build: off

    test_script:
      - cd src/serious_python/example/flet_example
      - dart run serious_python:main package app/src --dep-mappings "flet=flet-embed" --req-deps "flet-embed"
      - xvfb-run flutter test integration_test -d linux

  # ======================================
  #    Test on Linux ARM64
  # ======================================

  - matrix:
      only:
        - job_name: Test on Linux ARM64

    install:
      # Flutter SDK
      - sudo apt update --allow-releaseinfo-change
      - sudo apt install -y clang xvfb libgtk-3-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio
      - git clone https://github.com/flutter/flutter.git -b stable "$HOME/flutter"
      - export PATH="$PATH:$HOME/flutter/bin"
      - flutter upgrade
      - flutter doctor

    build: off

    test_script:
      - cd src/serious_python/example/flet_example
      - dart run serious_python:main package app/src --dep-mappings "flet=flet-embed" --req-deps "flet-embed"
      - xvfb-run flutter test integration_test -d linux

  # =========================================
  # Publish serious_python package to pub.dev
  # =========================================

  - matrix:
      only:
        - job_name: Publish serious_python package to pub.dev

    install:
      # update build version
      - ps: |
          if ($env:APPVEYOR_REPO_TAG_NAME) {
            $env:PKG_VER = $env:APPVEYOR_REPO_TAG_NAME.replace("v", "")
          } else {
            $cv = [version](git describe --abbrev=0).substring(1)
            $env:PKG_VER = "$($cv.major).$($cv.minor).$($env:APPVEYOR_BUILD_NUMBER)"
          }
          Write-Host "Package version: $($env:PKG_VER)"

      - pip3 install pyyaml
      - flutter upgrade --force

    build_script:
      # publish package
      - sh: |
          if [[ "$APPVEYOR_REPO_TAG_NAME" != "" ]]; then
            mkdir -p $HOME/.config/dart
            echo $PUB_DEV_TOKEN | base64 --decode > $HOME/.config/dart/pub-credentials.json

            # patch pubspecs
            python3 ci/patch_pubspec.py src/serious_python_platform_interface/pubspec.yaml $PKG_VER
            python3 ci/patch_pubspec.py src/serious_python/pubspec.yaml $PKG_VER
            python3 ci/patch_pubspec.py src/serious_python_android/pubspec.yaml $PKG_VER
            python3 ci/patch_pubspec.py src/serious_python_darwin/pubspec.yaml $PKG_VER
            python3 ci/patch_pubspec.py src/serious_python_windows/pubspec.yaml $PKG_VER
            python3 ci/patch_pubspec.py src/serious_python_linux/pubspec.yaml $PKG_VER

            cd src/serious_python_platform_interface
            dart pub publish --force || exit 1
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_android
            dart pub publish --force || exit 1
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_darwin
            dart pub publish --force || exit 1
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_windows
            dart pub publish --force || exit 1
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_linux
            dart pub publish --force || exit 1
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python
            dart pub publish --force || exit 1
            cd $APPVEYOR_BUILD_FOLDER

          elif [[ "$APPVEYOR_PULL_REQUEST_NUMBER" == "" ]]; then

            cd src/serious_python_platform_interface
            dart pub publish --dry-run
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_android
            dart pub publish --dry-run
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_darwin
            dart pub publish --dry-run
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_windows
            dart pub publish --dry-run
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python_linux
            dart pub publish --dry-run
            cd $APPVEYOR_BUILD_FOLDER

            cd src/serious_python
            dart pub publish --dry-run
            cd $APPVEYOR_BUILD_FOLDER
          fi

    test: off